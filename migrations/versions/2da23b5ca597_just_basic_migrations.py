"""just basic migrations

Revision ID: 2da23b5ca597
Revises: 
Create Date: 2025-01-31 16:27:25.000186

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '2da23b5ca597'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('expected_value',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('type', sa.Enum('income', 'expense', name='statusexpectedvalue'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('operator_type',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('positions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('projects',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('start_date', sa.DateTime(), nullable=True),
    sa.Column('end_date', sa.DateTime(), nullable=True),
    sa.Column('status', sa.Enum('in_progres', 'done', 'cancel', name='statusproject'), nullable=False),
    sa.Column('image', sa.String(), nullable=False),
    sa.Column('price', sa.String(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_projects_image'), 'projects', ['image'], unique=False)
    op.create_table('tasks',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('start_date', sa.DateTime(), nullable=False),
    sa.Column('end_date', sa.DateTime(), nullable=False),
    sa.Column('status', sa.Enum('to_do', 'in_progres', 'done', 'success', name='statustask'), nullable=False),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.Column('description', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('employees',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.String(length=100), nullable=False),
    sa.Column('username', sa.String(length=100), nullable=False),
    sa.Column('last_name', sa.String(length=100), nullable=False),
    sa.Column('phone_number', sa.String(length=50), nullable=False),
    sa.Column('date_of_birth', sa.DateTime(), nullable=True),
    sa.Column('date_of_jobstarted', sa.DateTime(), nullable=True),
    sa.Column('position_id', sa.Integer(), nullable=False),
    sa.Column('image', sa.String(), nullable=True),
    sa.Column('salary', sa.Integer(), nullable=True),
    sa.Column('user_type', sa.Enum('super_admin', 'admin', 'custom', name='usertype'), nullable=False),
    sa.Column('password', sa.String(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_time', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['position_id'], ['positions.id'], onupdate='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('username')
    )
    op.create_index(op.f('ix_employees_image'), 'employees', ['image'], unique=False)
    op.create_table('incomes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.Column('real_price', sa.String(length=100), nullable=True),
    sa.Column('pay_price', sa.String(length=100), nullable=True),
    sa.Column('date_paied', sa.DateTime(), nullable=True),
    sa.Column('position', sa.String(), nullable=True),
    sa.Column('project_id', sa.Integer(), nullable=True),
    sa.Column('type', sa.Enum('from_student', 'from_project', name='incometype'), nullable=False),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], onupdate='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('operators',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('full_name', sa.String(length=100), nullable=False),
    sa.Column('phone_number', sa.String(length=100), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('status', sa.Enum('in_progres', 'done', 'cancel', name='statusoperator'), nullable=False),
    sa.Column('operator_type_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['operator_type_id'], ['operator_type.id'], onupdate='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('expences',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('real_price', sa.String(), nullable=True),
    sa.Column('price_paid', sa.String(length=100), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('date_paied', sa.DateTime(), nullable=False),
    sa.Column('employee_salary_id', sa.Integer(), nullable=True),
    sa.Column('type', sa.Enum('employee_salary', 'for_office', 'smm_service', 'renting', 'other_expense', name='expensetype'), nullable=False),
    sa.ForeignKeyConstraint(['employee_salary_id'], ['employees.id'], onupdate='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('project_programmer',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.Column('programmer_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['programmer_id'], ['employees.id'], ),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('task_programmer',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('task_id', sa.Integer(), nullable=False),
    sa.Column('programmer_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['programmer_id'], ['employees.id'], ),
    sa.ForeignKeyConstraint(['task_id'], ['tasks.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('task_programmer')
    op.drop_table('project_programmer')
    op.drop_table('expences')
    op.drop_table('operators')
    op.drop_table('incomes')
    op.drop_index(op.f('ix_employees_image'), table_name='employees')
    op.drop_table('employees')
    op.drop_table('tasks')
    op.drop_index(op.f('ix_projects_image'), table_name='projects')
    op.drop_table('projects')
    op.drop_table('positions')
    op.drop_table('operator_type')
    op.drop_table('expected_value')
    # ### end Alembic commands ###
